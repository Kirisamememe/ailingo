// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  VIEWER
  BLOCKED
}

enum Language {
  EN_GB
  EN_US
  JA
  ZH_CN
  ZH_TW
  KO_KR
  FR_FR
  DE_DE
  ES_ES
  IT_IT

  @@map("language")
}

model User {
  id            String    @id @default(cuid())
  name          String    @default("Anonymous")
  role          Role      @default(VIEWER)
  image         String?
  email         String    @unique
  emailVerified DateTime?
  masteredWords String @default("I, you, he, she, it, we, they") @map("mastered_words")

  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  learningLanguage Language? @map("learning_language")
  nativeLanguage Language? @map("native_language")
  accounts       Account[]
  wordCards         WordCard[]

  @@map("user")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
  @@map("verification_token")
}
model WordCard {
  id Int @id @default(autoincrement())
  word String
  phonetics String
  definitions String
  example1 String @map("example_1")
  example2 String? @map("example_2")
  example3 String? @map("example_3")
  note String? @map("note")
  retentionRate Int @default(1) @db.SmallInt @map("retention_rate")
  derivatives String?
  synonyms String?
  antonyms String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  lastReviewedAt DateTime @default(now()) @map("last_reviewed_at")
  nextReviewAt DateTime? @map("next_review_at")
  masteredAt DateTime? @map("mastered_at")
  deletedAt DateTime? @map("deleted_at")

  language Language

  authorId String @map("author_id")
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@map("word_card")
}