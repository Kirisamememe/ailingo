// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  VIEWER
  BLOCKED
}

enum Language {
  EN
  JA
  ZH_CN
  ZH_TW
  KO
  FR
  DE
  ES
  PT
  IT
  RU
  VI

  @@map("language")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String    @default("Anonymous")
  role          Role      @default(VIEWER)
  image         String?
  email         String    @unique
  emailVerified DateTime?

  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  learningLanguage Language? @map("learning_language")
  nativeLanguage Language? @map("native_language")
  accounts       Account[]

  @@map("user")
}

model Account {
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@map("account")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
  @@map("verification_token")
}